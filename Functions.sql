CREATE DATABASE ADVANCEDSQL

USE ADVANCEDSQL;


CREATE TABLE DEPARTMENTS (DEPTID INT PRIMARY KEY,
DEPTNAME VARCHAR(20),
DEPTCITY VARCHAR(20)
);

INSERT INTO DEPARTMENTS(DEPTID,DEPTNAME,DEPTCITY) VALUES
(1,'IT','BANGLORE'),
(2,'HR','BANGLORE'),
(3,'SUPPORT','HYDERABAD'),
(4,'NON-IT','HYDERABAD'),
(5,'ADMIN','PUNE'),
(6,'MANAGER','PUNE');


SELECT * FROM DEPARTMENTS;

CREATE TABLE EMPLOYEES(
EMPID INT PRIMARY KEY,
EMPNAME VARCHAR(30),
EMPSALARY MONEY,
EMPCITY VARCHAR(30),
DEPTID INT FOREIGN KEY REFERENCES DEPARTMENTS(DEPTID)
);


INSERT INTO EMPLOYEES(EMPID,EMPNAME,EMPSALARY,EMPCITY,DEPTID) VALUES
(1,'TEJA',100000,'ONGOLE',1),
(2,'JAYANTH',200000,'NELLORE',2),
(3,'SOMESH',300000,'BANGLORE',3),
(4,'LOKESH',400000,'HYDERABAD',4),
(5,'SOHAIB',500000,'HYDERABAD',4),
(6,'CHAITANYA',600000,'PUNE',5),
(7,'RAJASHEKHAR',700000,'PUNE',5);

SELECT * FROM EMPLOYEES;

--FUNCTIONS

CREATE OR ALTER FUNCTION ADDDIGITS(
@num1 INT,
@num2 INT)
RETURNS INT
AS
BEGIN
DECLARE @RESULT INT
SET @RESULT=@NUM1+@NUM2;
RETURN @RESULT
END

SELECT dbo.ADDDIGITS(2,4);

SELECT dbo.ADDDIGITS(5,5);

CREATE OR ALTER FUNCTION GET_TOTAL(@emp_id INT)
RETURNS VARCHAR(30)
AS
BEGIN 
DECLARE @RESULT VARCHAR(30);
SELECT @RESULT= EMPNAME FROM EMPLOYEES WHERE EMPID=@emp_id;
RETURN @RESULT
END;

SELECT dbo.GET_TOTAL(2);

SELECT dbo.GET_TOTAL(4);


CREATE OR ALTER FUNCTION NET_SALES(
      @quantity INT,
      @price INT,
      @discount DECIMAL(3,2))
RETURNS DECIMAL(10,3)
AS
BEGIN
DECLARE @RESULT DECIMAL(10,3)
SET @RESULT=@QUANTITY*@PRICE*(1-@DISCOUNT)
RETURN @RESULT
END;

SELECT dbo.NET_SALES (10,10,0.10)


--SIMPLE INTEREST
CREATE OR ALTER FUNCTION SIMPLE_INTEREST(
@PRINCIPAL_AMOUNT INT,
@TIME DECIMAL(10,3),
@ROI DECIMAL(10,3))
RETURNS DECIMAL(10,3)
AS
BEGIN
DECLARE @AMOUNT DECIMAL(10,3)
SET @AMOUNT=((@PRINCIPAL_AMOUNT*@TIME*@ROI)/100)
RETURN @AMOUNT
END;


SELECT dbo.SIMPLE_INTEREST (10000,25,25.6);


DROP FUNCTION dbo.SIMPLE_INTEREST



CREATE OR ALTER FUNCTION LASTNAME_FISRTNAME(
@FIRSTNAME VARCHAR(30),
@LAST_NAME VARCHAR(30))
RETURNS   VARCHAR(100)
AS
BEGIN
DECLARE @FULLNAME VARCHAR(100)
SET @FULLNAME=@FIRSTNAME+' '+@LAST_NAME;
RETURN @FULLNAME;
END


SELECT dbo.LASTNAME_FISRTNAME ('teja','rathodd');

SELECT DBO.LASTNAME_FISRTNAME ('THARUN','BHASKHAR') AS FULLNAME;

--AVERGAE FROM DEPARTMENT

CREATE OR ALTER FUNCTION AVG_SALARY(
@dept_id INT
)
RETURNS DECIMAL(10,3)
AS
BEGIN
DECLARE @AVG_SALARY DECIMAL(10,3)
SELECT @AVG_SALARY= AVG(EMPSALARY) FROM EMPLOYEES WHERE DEPTID=@dept_id;
RETURN @AVG_SALARY
END;

SELECT DBO.AVG_SALARY (1);

SELECT DBO.AVG_SALARY (4);


--TABLE VALUED FUNCTIONS


--INLINE VALUED

CREATE OR ALTER FUNCTION GET_EMPLOYEE()
RETURNS TABLE
AS
RETURN (SELECT * FROM EMPLOYEES);


SELECT * FROM GET_EMPLOYEE();
SELECT *FROM EMPLOYEES;


CREATE OR ALTER FUNCTION EMP(@emp_id INT)
RETURNS TABLE
AS
RETURN
SELECT EMPID,EMPNAME,EMPSALARY FROM EMPLOYEES
WHERE EMPID=@emp_id;

SELECT * FROM dbo.EMP (1);

SELECT * FROM dbo.EMP (3);

SELECT * FROM dbo.EMP (5);


CREATE OR ALTER FUNCTION DEPT(
@dept_id INT)
RETURNS TABLE
AS
RETURN
SELECT EMPID,
       EMPNAME,
	   EMPSALARY,
	   DEPTID
FROM EMPLOYEES
WHERE DEPTID=@dept_id;


SELECT * FROM DEPT (5);

SELECT * FROM DEPT (1);

SELECT * FROM DEPT (4);

--MULTI VALUED
CREATE OR ALTER FUNCTION  Get_Employee_Details(@emp_name VARCHAR(30),@emp_id INT)
RETURNS @EMPLOYEES_DETAILS TABLE(
        EMPID INT,
        EMPNAME NVARCHAR(50)
    )
	AS 
	BEGIN
    INSERT INTO @EMPLOYEES_DETAILS 
    SELECT EMPID, EMPNAME FROM Employees
	UPDATE @EMPLOYEES_DETAILS  SET EMPNAME=@emp_name WHERE EMPID=@emp_id;
   RETURN
END

SELECT * FROM dbo.Get_Employee_Details('salaar',5);


select * from employees;

CREATE OR ALTER FUNCTION GetEmployeeDetailsFunction()
RETURNS TABLE
AS
RETURN (
       SELECT EMPID,EMPNAME FROM Employees
       )

SELECT * FROM dbo.GetEmployeeDetailsFunction();



CREATE OR ALTER FUNCTION DIRECTIONS(
@input INT)
RETURNS VARCHAR(20)
AS 
BEGIN
DECLARE @result VARCHAR(20)
IF(@input=1)
RETURN 'EAST'
ELSE IF(@input=2)
RETURN 'WEST'
ELSE
RETURN'NOTHING';

RETURN  ''
END

SELECT dbo.DIRECTIONS(1);

SELECT dbo.DIRECTIONS(2);

SELECT dbo.DIRECTIONS(0);




















